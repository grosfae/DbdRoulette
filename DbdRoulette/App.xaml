<Application x:Class="DbdRoulette.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DbdRoulette"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--TextBlock Styles-->
        <Style TargetType="TextBlock" x:Key="Header">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Roboto Consended"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="UnicodeText">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#FontAwesome"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="EuropeTitleFont">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#EuropeExtendedC"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="ArkhipText">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Arkhip"/>
        </Style>
        
        <Style TargetType="TextBlock" x:Key="LinkHeader">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Arkhip"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FF121212" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" x:Key="MiniText">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Raleway"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="PtSansText">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#PT Sans"/>
        </Style>


        <!--Borders Styles-->
        <Style TargetType="Border" x:Key="CardBorder">
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FF0066FF" 
                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" 
                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!--Buttons Styles-->
        <Style TargetType="Button" x:Key="MenuButton">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Label Height="auto" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Margin="0 5 0 0" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}"/>
                            <Rectangle x:Name="LineSep" Visibility="Hidden" Fill="#FF3881EF" Width="80" Height="5" Margin="0 5 0 0" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <Rectangle.RenderTransform>
                                    <SkewTransform AngleX="-45"/>
                                </Rectangle.RenderTransform>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <Trigger Property="Visibility" Value="Visible">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="LineSep" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FF3881EF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="MenuButtonRed">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Label Height="auto" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Margin="0 5 0 0" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}"/>
                            <Rectangle x:Name="LineSep" Visibility="Hidden" Fill="#FFE42F2F" Width="80" Height="5" Margin="0 5 0 0" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <Rectangle.RenderTransform>
                                    <SkewTransform AngleX="-45"/>
                                </Rectangle.RenderTransform>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <Trigger Property="Visibility" Value="Visible">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="LineSep" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FFE42F2F" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="MenuButtonGradientRedBlue">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button" >
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Label Height="auto" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Margin="0 5 0 0" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}"/>
                            <Rectangle x:Name="LineSep" Visibility="Hidden" Width="80" Height="5" Margin="0 5 0 0" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.7,0">
                                        <GradientStop Color="#FF3881EF" Offset="0.9"/>
                                        <GradientStop Color="#FFE42F2F" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                                <Rectangle.RenderTransform>
                                    <SkewTransform AngleX="-45"/>
                                </Rectangle.RenderTransform>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <Trigger Property="Visibility" Value="Visible">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="LineSep" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.7,0">
                                <GradientStop Color="#FF3881EF" Offset="0.9"/>
                                <GradientStop Color="#FFE42F2F" Offset="0.9"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="CardBtnWhite">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="#FF3881EF" 
                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="White" 
                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ChapterRedBtn">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#FFA31816"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Raleway"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontWeight" Value ="DemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FFA31816" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ChapterBlueBtn">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#3881EF"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Raleway"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontWeight" Value ="DemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#3881EF" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ListviewArrowBtn">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FFC7211F"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#FontAwesome"/>
            <Setter Property="Background" Value="#FFC7211F"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="100" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="100" Margin="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2 0"/>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FF6B6B6B" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="#FF6B6B6B" 
                Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FFC7211F" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="#FFC7211F" 
                Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="MovingAnglesButton">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <Path  x:Name="TopAngle"  Data="M0 0L85 0V5H5V85H0V0Z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Top">
                                <Path.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Path x:Name="BottomAngle" Data="M85 85L0 85L4.37114e-07 80L80 80L80 -4.37114e-07L85 0L85 85Z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                <Path.RenderTransform>
                                    <TranslateTransform  X="0" Y="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="TopAngle"
                                                From="0.0" To="-5.0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="TopAngle"
                                                From="0.0" To="-5.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="BottomAngle"
                                                From="0.0" To="5.0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="BottomAngle"
                                                From="0.0" To="5.0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="TopAngle"
                                                From="-5.0" To="0.0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="TopAngle"
                                                From="-5.0" To="0.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="BottomAngle"
                                                From="5.0" To="0.0" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="BottomAngle"
                                                From="5.0" To="0.0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="MenuListBtn">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="40" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton" >
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Label Height="auto" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Margin="0 5 0 0" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}"/>
                            <Path Stroke="White" x:Name="Arrow"
                                HorizontalAlignment="Right" RenderTransformOrigin="0.5, 0.5" Visibility="Visible"
                                VerticalAlignment="Center" StrokeThickness="2"  StrokeEndLineCap="Square" StrokeStartLineCap="Square"
                                Data="M9 1.5L5 5.5L1 1.5" Margin="0 0 10 3">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <Path Stroke="White" x:Name="ArrowUp" Visibility="Hidden"
                                HorizontalAlignment="Right" RenderTransformOrigin="0.5, 0.5"
                                VerticalAlignment="Center" StrokeThickness="2"  StrokeEndLineCap="Square" StrokeStartLineCap="Square"
                                Data="M9 1.5L5 5.5L1 1.5" Margin="0 0 10 3">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="180"/>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle x:Name="LineSep" Visibility="Hidden" Fill="#FF3881EF" Width="80" Height="5" Margin="0 5 0 0" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                                <Rectangle.RenderTransform>
                                    <SkewTransform AngleX="-45"/>
                                </Rectangle.RenderTransform>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <Trigger Property="Visibility" Value="Visible">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.0" To="1.0" Duration="0:0:0.2"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="LineSep" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Arrow" Property="Stroke" Value="#FF3881EF"/>
                                <Setter TargetName="ArrowUp" Property="Stroke" Value="#FF3881EF"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Visibility" Value="Hidden"/>
                                <Setter TargetName="ArrowUp" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="LineSep" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ArrowUp" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#FF3881EF" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="BackButton">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Background" Value="#FF3881EF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="3"/>
                            <Polygon Fill="{TemplateBinding Background}" Points="160,40, 0,40, 0,0,130,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="#FF3881EF" 
                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FF3881EF" 
                Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                                <ColorAnimation To="White" 
                Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd" 
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="ListCardTextButton">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Raleway"/>
            <Setter Property="Background" Value="#FF121212"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}" x:Name="MainGrid" Opacity="0">
                            <Path  x:Name="TopAngle" Opacity="0"  Data="M0 0L43 0V2.52941H2.52941V43H0V0Z" Fill="#3881EF" VerticalAlignment="Top">
                            </Path>
                            <StackPanel Margin="8 0 8 0">
                                <TextBlock Foreground="{TemplateBinding Foreground}" FontWeight="Bold" FontSize="18" FontFamily="{TemplateBinding FontFamily}" Text="{TemplateBinding Tag}" VerticalAlignment="Top" HorizontalAlignment="Center"  Margin="0 25 0 20"/>
                                <TextBlock Text="{TemplateBinding Content}"  FontSize="16" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Center" TextWrapping="Wrap" />
                            </StackPanel>
                            <Path x:Name="BottomAngle" Opacity="0" Data="M43 43L-2.5034e-06 43L-2.28227e-06 40.4706L40.4706 40.4706L40.4706 -2.72452e-06L43 -2.5034e-06L43 43Z" Fill="#3881EF" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TopAngle" From="0.0" To="1" Duration="0:0:0.4"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BottomAngle" From="0.0" To="1" Duration="0:0:0.4"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MainGrid" From="0.0" To="1" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TopAngle" From="1.0" To="0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BottomAngle" From="1.0" To="0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MainGrid" From="1" To="0" Duration="0:0:0.4"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--RadioButtons Style-->
        <Style TargetType="RadioButton" x:Key="RedRadio">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FFB70303" 
                Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" 
                Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="RadioButton" x:Key="BlueRadio">
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Resources/Fonts/#Roboto Consended"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FF1453B1" 
                Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Transparent" 
                Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)" 
                FillBehavior="HoldEnd"
                Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>
        
        <Style TargetType="RadioButton" x:Key="PerksSelectionRadio">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Background="#FF121212" x:Name="MainGrid" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="Center">
                            <Path  x:Name="TopAngle" Opacity="0"  Data="M0 0L43 0L43 4H4V43H0V0Z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Top">
                                <Path.RenderTransform>
                                    <TranslateTransform  X="0" Y="0"/>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle Fill="{TemplateBinding Background}" RenderOptions.BitmapScalingMode="Fant" Height="80" Width="80" />
                            <Path x:Name="BottomAngle" Opacity="0" Data="M43 43L-1.2517e-06 43L-5.06639e-06 39L39 39L39 -1.2517e-06H43L43 43Z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                <Path.RenderTransform>
                                    <TranslateTransform  X="0" Y="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TopAngle" From="0.0" To="1" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BottomAngle" From="0.0" To="1" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="TopAngle" 
                         From="0.0" To="-3.0" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="TopAngle"
                         From="0.0" To="-3.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="BottomAngle"
                         From="0.0" To="3.0" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="BottomAngle"
                         From="0.0" To="3.0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TopAngle" From="1.0" To="0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BottomAngle" From="1.0" To="0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="TopAngle"
                         From="-3.0" To="0.0" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="TopAngle"
                         From="-3.0" To="0.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="BottomAngle"
                         From="3.0" To="0.0" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(Path.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="BottomAngle"
                         From="3.0" To="0.0" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="PictureSelectRadio">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">

                        <Grid Background="Transparent" x:Name="MainGrid" Width="{TemplateBinding Width}" HorizontalAlignment="Center">

                            <Grid.RenderTransform>
                                <ScaleTransform ScaleX="0.8" ScaleY="0.8" CenterX="160" CenterY="50"/>
                            </Grid.RenderTransform>
                            <Grid Panel.ZIndex="2" Width="136" Margin="50 0 0 0">
                                <Rectangle x:Name="RecLeft" Fill="#FFB70303" Height="{TemplateBinding Height}" Width="40" HorizontalAlignment="Left" Margin="1 0 0 0">
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform ScaleX="0" ScaleY="0" CenterY="50"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Rectangle Fill="{TemplateBinding Background}" RenderOptions.BitmapScalingMode="Fant" Height="100" Width="130" Panel.ZIndex="3"/>
                                <Rectangle x:Name="RecRight" Fill="#FFB70303" Height="{TemplateBinding Height}" Width="40" HorizontalAlignment="Right" Margin="0 0 1 0">
                                    <Rectangle.RenderTransform>
                                        <ScaleTransform ScaleX="0" ScaleY="0" CenterY="50"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                            <Grid x:Name="GridBack">
                                <Grid.RenderTransform>
                                    <ScaleTransform ScaleX="0" CenterX="300"/>
                                </Grid.RenderTransform>
                                <Grid Background="#FFB70303" Height="30" Width="{TemplateBinding Width}" HorizontalAlignment="Right">
                                    <TextBlock x:Name="TbContent" Opacity="0" Text="{TemplateBinding Content}" Width="90" TextWrapping="Wrap" HorizontalAlignment="Left" FontSize="6" Foreground="White" FontFamily="/Resources/Fonts/#Arkhip" VerticalAlignment="Center" Margin="5 0 0 0"/>
                                </Grid>
                                <Polygon HorizontalAlignment="Right" Fill="#FF8E0000" Points="0 30 40 30 40 0 0 30" Panel.ZIndex="1" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TbContent" From="0.0" To="1" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="GridBack"  From="0.0" To="1.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RecLeft"  From="0.0" To="1.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RecLeft"  From="0.0" To="1.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RecRight"  From="0.0" To="1.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RecRight"  From="0.0" To="1.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="MainGrid"  From="0.8" To="1.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="MainGrid"  From="0.8" To="1.0" Duration="0:0:0.3"/>


                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TbContent" From="1.0" To="0" Duration="0:0:0.0"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="GridBack"  From="1.0" To="0.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RecLeft"  From="1.0" To="0.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RecLeft"  From="1.0" To="0.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="RecRight"  From="1.0" To="0.0" Duration="0:0:0.2"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Rectangle.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="RecRight"  From="1.0" To="0.0" Duration="0:0:0.3"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="MainGrid"  From="1" To="0.8" Duration="0:0:0.4"/>

                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="MainGrid"  From="1" To="0.8" Duration="0:0:0.4"/>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="RadioButton" x:Key="DotPictureSelectRadio">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="100" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                        </Border>
                        
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="#FFB70303" Storyboard.TargetProperty="(RadioButton.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.2"/>
                                <ColorAnimation To="White" Storyboard.TargetProperty="(RadioButton.BorderBrush).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.2"/>

                                <DoubleAnimation Storyboard.TargetProperty="(Border.Background).(Opacity)" From="0.3" To="1" Duration="0:0:0.2"/>

                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="1.2" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="1.2" Duration="0:0:0.2"/>

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="White" Storyboard.TargetProperty="(RadioButton.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.2"/>
                                <ColorAnimation To="Black" Storyboard.TargetProperty="(RadioButton.BorderBrush).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0.2"/>
                                
                                <DoubleAnimation Storyboard.TargetProperty="(Border.Background).(Opacity)" From="1" To="0.3" Duration="0:0:0.2"/>

                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" From="1.2" To="1" Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" From="1.2" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--TextBox PlaceHolder-->
        <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Raleway"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" MaxLength="{TemplateBinding MaxLength}"
                                 Background="Transparent" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" CaretBrush="{TemplateBinding CaretBrush}" BorderThickness="0"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" FontFamily="{TemplateBinding FontFamily}" BorderThickness="{TemplateBinding BorderThickness}" MaxLength="{TemplateBinding MaxLength}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#FF757575"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Custom SortBox-->
        <ControlTemplate x:Key="SortBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  Background="Transparent"
                  BorderBrush="White"
                  BorderThickness="1.5" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent" 
                  BorderBrush="Transparent"
                  BorderThickness="0,0,1,0" />

                <Viewbox Height="9" VerticalAlignment="Center" HorizontalAlignment="Right" >
                    <Path 
                  x:Name="ArrowDown"
                  Grid.Column="1"     
                  Stroke="White" 
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center" StrokeThickness="1"  StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                  Data="M9 1.5L5 5.5L1 1.5"
                />
                </Viewbox>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Background" Value="#FF757575" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                    <Setter Property="Foreground" Value="#888888"/>
                    <Setter TargetName="ArrowDown" Property="Stroke" Value="black" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SortBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="CustomSortBox" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Raleway"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleSortButton" 
                            Template="{StaticResource SortBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSortSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,0,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableSortTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource SortBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Foreground="White"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="PopupSort"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False" 
                            PopupAnimation="Slide">

                                <Grid Name="DropDownSort"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownSortBorder"
                                BorderThickness="1"
                                BorderBrush="White">
                                        <Border.Background>
                                            <SolidColorBrush Color="Black" Opacity="0.5"/>
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownSortBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="PopupSort" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownSortBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownSortBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableSortTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSortSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CustomSortBoxItem -->
        <Style x:Key="CustomSortBoxItem" TargetType="{x:Type ComboBoxItem}" >
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="FontFamily" Value="/Resources/Fonts/#Raleway"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Margin" Value="0 5 0 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2" BorderBrush="White"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FFD2D2D2"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--None HighLight ListViewItem-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBar Style-->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF3881EF" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="Black" />

        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Margin="1" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="ThumbBorder" CornerRadius="4" Background="{TemplateBinding Background}" Opacity="0.4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8" Margin="0,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbBorder" From="0.4" To="1" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbBorder" From="1" To="0.4" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,0,0,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#F0F0F0"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="10"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1"/>
                            <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
